package io.flutter.plugins;

import androidx.annotation.Keep;
import androidx.annotation.NonNull;
import io.flutter.Log;

import io.flutter.embedding.engine.FlutterEngine;

/**
 * Generated file. Do not edit.
 * This file is generated by the Flutter tool based on the
 * plugins that support the Android platform.
 */
@Keep
public final class GeneratedPluginRegistrant {
  private static final String TAG = "GeneratedPluginRegistrant";
  public static void registerWith(@NonNull FlutterEngine flutterEngine) {
    try {
      flutterEngine.getPlugins().add(new dev.fluttercommunity.plus.device_info.DeviceInfoPlusPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin device_info_plus, dev.fluttercommunity.plus.device_info.DeviceInfoPlusPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new co.creativemind.device_information.DeviceInformationPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin device_information, co.creativemind.device_information.DeviceInformationPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new dev.flutter.plugins.integration_test.IntegrationTestPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin integration_test, dev.flutter.plugins.integration_test.IntegrationTestPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.netease.nimflutter.NimCorePlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin nim_core, com.netease.nimflutter.NimCorePlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new io.flutter.plugins.pathprovider.PathProviderPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin path_provider_android, io.flutter.plugins.pathprovider.PathProviderPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.baseflow.permissionhandler.PermissionHandlerPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin permission_handler, com.baseflow.permissionhandler.PermissionHandlerPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.netease.yunxin.alog.yunxin_alog.FlutterAlogPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin yunxin_alog, com.netease.yunxin.alog.yunxin_alog.FlutterAlogPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.netease.yunxin.integration_test.yunxin_integration_test.YunxinIntegrationTestPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin yunxin_integration_test, com.netease.yunxin.integration_test.yunxin_integration_test.YunxinIntegrationTestPlugin", e);
    }
  }
}
